@page "/servers"

<title>Servers</title>

<h1>Servers</h1>

<div class="container-fluid text-center">
	<div class="row align-content-center" >
		@foreach (var city in cities)
		{
			<div class="col">
				<div class="card m-3 align-content-center">
					<img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
					<div class="card-body">
						<button type="button" class="btn btn-primary">
							@city
						</button>
					</div>
				</div> 
			</div>
		}
	</div>
</div>

<br/>

<div class="container-fluid">
	<ul>
		@foreach (var server in servers)
		{
			<li>
				@{server.IsOnline = new Random().Next(0, 2) == 0;}
				@server.ServerName in @server.ServerCity is
				<span style="color:@(server.IsOnline?"Green" : "Red")">
					@(server.IsOnline ? "Online" : "Offline")
				</span>
				<a href="/servers/edit/@server.ServerId" class="btn btn-link">Edit</a>

				<EditForm
					Model="server"
					FormName="@($"form-delete-{server.ServerId}")"
					OnValidSubmit="@(() => {DeleteServer(server.ServerId);})">
					<button class="btn btn-primary m-2" type="submit">Delete</button>
				</EditForm>

			</li>
		}
	</ul>

	<p>
		<a href="servers/add" class="btn btn-primary">Add Server</a>
	</p>
</div>


@code
{
	private List<Server> servers = ServerRepository.GetServers();
	private List<string> cities = CityRepository.GetCities();

	private void DeleteServer(int serverId)
	{
		if (serverId > 0)
			ServerRepository.DeleteServer(serverId);
	}
}
