@page "/servers"

<title>Servers</title>

<h1>Servers</h1>

<div class="container-fluid text-center">
	<div class="row align-content-center" >
		@foreach (var city in cities)
		{
			<div class="col">
				<div class="card m-3 align-content-center">
					<img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
					<div class="card-body">
						<button type="button" class="btn btn-primary">
							@city
						</button>
					</div>
				</div> 
			</div>
		}
	</div>
</div>

<br/>

<div>
	<ServerComponent></ServerComponent>
</div>

<div class="container-fluid">
	<div class="row border p-2">
		<!--Renders servers-->
		<div class="col-6">
			<ul>
				@foreach (var server in servers)
				{
					<li>
						@server.ServerName in @server.ServerCity is
						<span style="color:@(server.IsOnline?"Green" : "Red")">
							@(server.IsOnline ? "Online" : "Offline")
						</span>
						<a href="/servers/edit/@server.ServerId" class="btn btn-link">Edit</a>

						<EditForm
							Enhance = "true"
							Model="server"
							FormName="@($"form-delete-{server.ServerId}")"
							OnValidSubmit="@(() => {DeleteServer(server.ServerId);})">
							<button class="btn btn-primary m-2" type="submit">Delete</button>
						</EditForm>

					</li>
				}
			</ul>

			<p>
				<NavLink class="nav-link" href="servers/add">
					<button class="btn btn-primary">Add Server</button>
				</NavLink>
			</p>
		</div>

		<div class="col-6">
			<EditForm Model="servers" Enhance = "true" FormName="filterForm" OnSubmit="OnFilterUpdate">
				<label>Filter by City</label>
				<InputText @bind-Value="filterData" class="form-control"></InputText>
				<button class="btn btn-primary m-2" type="submit">Filter</button>
			</EditForm>
		</div>
	</div>
</div>


@code
{
	private List<Server> servers { get; set; } = ServerRepository.GetServers();
	private List<string> cities = CityRepository.GetCities();

	[SupplyParameterFromForm]
	private string? filterData { get; set; }

	private void DeleteServer(int serverId)
	{
		if (serverId > 0)
			ServerRepository.DeleteServer(serverId);
	}

	private void OnFilterUpdate()
	{
		if (filterData != null && filterData != "")
			servers = ServerRepository.GetServersByCity(filterData);
	}
}
