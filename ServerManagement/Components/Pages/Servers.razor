@page "/servers"
@page "/servers/back_from/{cityName}"


@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<title>Servers</title>

<h1>Servers</h1>

<CityListComponent @ref="cityListComponent" HandleFilterCityCallback="HandleFilterCity" FilterCity="@this.selectedCity"></CityListComponent>

<br/>


<SearchComponent @ref="searchComponent" servers="servers" HandleSearchCallback="HandleSearch"></SearchComponent>


<!--Renders servers-->

<CascadingValue Name="selectedCity" Value="@selectedCity">

	<ServerListComponent servers="servers"></ServerListComponent>

</CascadingValue>




@code
{
	private List<Server> servers { get; set; } = ServerRepository.GetServers();

	private string selectedCity { get; set; }

	[Parameter]
	public string cityName { get; set; }


	private CityListComponent? cityListComponent;

	private SearchComponent? searchComponent;

	private void HandleSearch(List<Server> servers)
	{
		this.servers = servers;

		cityListComponent?.ClearFilter();
	}

	private void HandleFilterCity(string city)
	{
		selectedCity = city;
		this.servers = ServerRepository.GetServersByCity(city);
		searchComponent?.ClearFilter();
	}

	protected override void OnAfterRender(bool firstRender)
	{
		if(firstRender)
		{
			if(NavigationManager.Uri.Contains("back_from") && !string.IsNullOrWhiteSpace(cityName))
			{
				selectedCity = cityName;
				HandleFilterCity(selectedCity);
				StateHasChanged();
			}
		}
	}

}
