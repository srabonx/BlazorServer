@page "/servers/edit/{id:int}"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<title>Edit-Server</title>

<h3>Edit Server</h3>

<br/>
<br/>

@if (server != null)
{
	<EditForm Model="server" OnValidSubmit="OnSubmit">

		<DataAnnotationsValidator></DataAnnotationsValidator>

		<InputNumber @bind-Value="server.ServerId" hidden></InputNumber>

		<div class="row mb-3">
			<div class="col-2">
				<label class="col-form-label">Name</label>
			</div>
			<div class="col-6">
				<InputText @bind-Value="server.ServerName" class="form-control"></InputText>
			</div>
			<div class="col">
				<ValidationMessage For="() => server.ServerName"></ValidationMessage>
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-2">
				<label class="col-form-label">City</label>
			</div>
			<div class="col-6">
				<InputText @bind-Value="server.ServerCity" class="form-control"></InputText>
			</div>
			<div class="col">
				<ValidationMessage For="() => server.ServerCity"></ValidationMessage>
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-2">
				<label class="col-form-label">Online</label>
			</div>
			<div class="col-6">
				<InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
			</div>
		</div>
		
		<br/>

		<button class="btn btn-primary" type="submit">Update</button>
		&nbsp;
		<a href="/servers" class="btn btn-primary">Close</a>

	</EditForm>
}

<br/>


@code {
	[Parameter]
	public int Id { get; set; }

	Server? server { get; set; }

	protected override void OnParametersSet()
	{
		server ??= ServerRepository.GetServerById(this.Id);
	}

	private void OnSubmit()
	{
		if(server != null)
		{
			ServerRepository.UpdateServer(server.ServerId, server);
			NavigationManager.NavigateTo("/servers");
		}
	}
}
